{"$schema":"https://ui.shadcn.com/schema/registry-item.json","name":"accordion","type":"registry:ui","dependencies":[],"files":[{"content":"import React, {useState} from 'react';\nimport {ReactElement} from 'react';\nimport {cn} from '@/utils/lib';\n\nexport interface AccordionParams {\n  title: string;\n  content: string;\n  className?: string;\n  defaultOpen?: boolean;\n  isOpen?: boolean | null;\n  onToggle?: () => void;\n}\n\nconst Accordion = ({\n  title,\n  content,\n  className = '',\n  defaultOpen = false,\n  isOpen = null,\n  onToggle,\n}: AccordionParams) => {\n  const [visible, setVisible] = useState(defaultOpen);\n  const toggleAccordion = () => {\n    setVisible(!visible);\n  };\n  return (\n    <div\n      className={cn(\n        'border border-zinc-700 rounded-xl mb-2 overflow-hidden',\n        className\n      )}\n    >\n      {/* Accordion Header */}\n      <div\n        onClick={onToggle ?? toggleAccordion}\n        className=\"cursor-pointer bg-zinc-900 hover:bg-zinc-800 px-4 py-3 flex items-center justify-between transition-colors duration-300 \"\n      >\n        <span className=\"text-white font-medium  \">{title}</span>\n        <svg\n          className={cn(\n            'transition-transform duration-300 transform',\n            (isOpen ?? visible) ? 'rotate-180' : 'rotate-0'\n          )}\n          width=\"20\"\n          height=\"20\"\n          viewBox=\"0 0 24 24\"\n          fill=\"none\"\n        >\n          <path\n            d=\"M6 9l6 6 6-6\"\n            stroke=\"#fff\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </div>\n\n      {/* Accordion Content */}\n      <div\n        className={cn(\n          'transition-all duration-300 bg-zinc-800 px-4 text-white text-sm',\n          (isOpen ?? visible)\n            ? 'max-h-96 opacity-100 py-3'\n            : 'max-h-0 opacity-0 py-0 overflow-hidden'\n        )}\n      >\n        {content}\n      </div>\n    </div>\n  );\n};\n\ninterface AccordionWrapperParams {\n  children: ReactElement<AccordionParams> | ReactElement<AccordionParams>[];\n}\n\nconst AccordionWrapper = ({children}: AccordionWrapperParams) => {\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  return (\n    <div>\n      {React.Children.map(children, (child, index) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child, {\n              isOpen: activeIndex === index,\n              onToggle: () =>\n                setActiveIndex(activeIndex === index ? null : index),\n            })\n          : child\n      )}\n    </div>\n  );\n};\n\nexport {AccordionWrapper, Accordion as default};\n","type":"registry:ui","path":"packages/uignite/src/components/Accordion/Accordion.tsx"}]}