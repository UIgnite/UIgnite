{
  "name": "accordion",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "packages/uignite/src/components/Accordion/Accordion.tsx",
      "type": "registry:ui",
      "content": "import React, {useState} from 'react';\r\nimport {ReactElement} from 'react';\r\nimport {cn} from '@/lib/utils';\r\nimport {ChevronDown} from 'lucide-react';\r\n\r\nexport interface AccordionParams {\r\n  title: string;\r\n  content: string;\r\n  className?: string;\r\n  defaultOpen?: boolean;\r\n  isOpen?: boolean | null;\r\n  onToggle?: () => void;\r\n}\r\n\r\nconst Accordion = ({\r\n  title,\r\n  content,\r\n  className = '',\r\n  defaultOpen = false,\r\n  isOpen = null,\r\n  onToggle,\r\n}: AccordionParams) => {\r\n  const [visible, setVisible] = useState(defaultOpen);\r\n  const toggleAccordion = () => {\r\n    setVisible(!visible);\r\n  };\r\n  return (\r\n    <div\r\n      className={cn(\r\n        'border-[0.5px] border-zinc-700/20 rounded-xl mt-[0.5px] overflow-hidden',\r\n        className\r\n      )}\r\n    >\r\n      {/* Accordion Header */}\r\n      {/* Bg color rendering inssue in switching modes  */}\r\n      <div\r\n        onClick={onToggle ?? toggleAccordion}\r\n        className=\"cursor-pointer dark:bg-zinc-900 dark:hover:bg-neutral-800   px-4 py-3 flex items-center justify-between  duration-300  \"\r\n      >\r\n        <span className=\"text-black dark:text-white font-medium  \">\r\n          {title}\r\n        </span>\r\n\r\n        <ChevronDown\r\n          className={cn(\r\n            'transition-transform duration-300 transform text-black dark:text-white mr-4 ',\r\n            (isOpen ?? visible) ? 'rotate-180' : 'rotate-0'\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      {/* Accordion Content */}\r\n      <div\r\n        className={cn(\r\n          'transition-all duration-300  dark:bg-zinc-800 px-4 dark:text-white text-sm',\r\n          (isOpen ?? visible)\r\n            ? 'max-h-96 opacity-100 py-3'\r\n            : 'max-h-0 opacity-0 py-0 overflow-hidden'\r\n        )}\r\n      >\r\n        {content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface AccordionWrapperParams {\r\n  children: ReactElement<AccordionParams> | ReactElement<AccordionParams>[];\r\n}\r\n\r\nconst AccordionWrapper = ({children}: AccordionWrapperParams) => {\r\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\r\n\r\n  return (\r\n    <div>\r\n      {React.Children.map(children, (child, index) =>\r\n        React.isValidElement(child)\r\n          ? React.cloneElement(child, {\r\n              isOpen: activeIndex === index,\r\n              onToggle: () =>\r\n                setActiveIndex(activeIndex === index ? null : index),\r\n            })\r\n          : child\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {AccordionWrapper, Accordion as default};\r\n"
    }
  ],
  "$schema": "https://ui.shadcn.com/schema/registry-item.json"
}
