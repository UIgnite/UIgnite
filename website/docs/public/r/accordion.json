{
  "name": "accordion",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "packages/uignite/src/components/Accordion/Accordion.tsx",
      "type": "registry:ui",
      "content": "import React, {useState} from 'react';\nimport {ReactElement} from 'react';\nimport {cn} from '@/lib/utils';\nimport {ChevronDown} from 'lucide-react';\n\nexport interface AccordionParams {\n  title: string;\n  content: string;\n  className?: string;\n  defaultOpen?: boolean;\n  isOpen?: boolean | null;\n  onToggle?: () => void;\n}\n\nconst Accordion = ({\n  title,\n  content,\n  className = '',\n  defaultOpen = false,\n  isOpen = null,\n  onToggle,\n}: AccordionParams) => {\n  const [visible, setVisible] = useState(defaultOpen);\n  const toggleAccordion = () => {\n    setVisible(!visible);\n  };\n  return (\n    <div\n      className={cn(\n        'border-[0.5px] border-zinc-700/20 rounded-xl mt-[0.5px] overflow-hidden',\n        className\n      )}\n    >\n      {/* Accordion Header */}\n      {/* Bg color rendering inssue in switching modes  */}\n      <div\n        onClick={onToggle ?? toggleAccordion}\n        className=\"cursor-pointer dark:bg-zinc-900 dark:hover:bg-neutral-800   px-4 py-3 flex items-center justify-between  duration-300  \"\n      >\n        <span className=\"text-black dark:text-white font-medium  \">\n          {title}\n        </span>\n\n        <ChevronDown\n          className={cn(\n            'transition-transform duration-300 transform text-black dark:text-white mr-4 ',\n            (isOpen ?? visible) ? 'rotate-180' : 'rotate-0'\n          )}\n        />\n      </div>\n\n      {/* Accordion Content */}\n      <div\n        className={cn(\n          'transition-all duration-300  dark:bg-zinc-800 px-4 dark:text-white text-sm',\n          (isOpen ?? visible)\n            ? 'max-h-96 opacity-100 py-3'\n            : 'max-h-0 opacity-0 py-0 overflow-hidden'\n        )}\n      >\n        {content}\n      </div>\n    </div>\n  );\n};\n\ninterface AccordionWrapperParams {\n  children: ReactElement<AccordionParams> | ReactElement<AccordionParams>[];\n}\n\nconst AccordionWrapper = ({children}: AccordionWrapperParams) => {\n  const [activeIndex, setActiveIndex] = useState<number | null>(null);\n\n  return (\n    <div>\n      {React.Children.map(children, (child, index) =>\n        React.isValidElement(child)\n          ? React.cloneElement(child, {\n              isOpen: activeIndex === index,\n              onToggle: () =>\n                setActiveIndex(activeIndex === index ? null : index),\n            })\n          : child\n      )}\n    </div>\n  );\n};\n\nexport {AccordionWrapper, Accordion as default};\n"
    }
  ],
  "$schema": "https://ui.shadcn.com/schema/registry-item.json"
}
