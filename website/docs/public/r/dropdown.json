{
  "name": "dropdown",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "https://d278-104-28-199-190.ngrok-free.app/r/dropdown.json"
  ],
  "files": [
    {
      "path": "components/ui/Dropdown.tsx",
      "type": "registry:ui",
      "content": "import React, {useCallback, useRef, useState} from 'react';\r\nimport {Button} from '@/components/ui/Button';\r\n\r\nfunction Dropdown({\r\n  children,\r\n  button,\r\n  title = 'Open',\r\n}: React.PropsWithChildren<{button?: React.ReactNode; title?: string}>) {\r\n  const buttonRef = useRef<HTMLDivElement | null>(null);\r\n  const dropDownRef = useRef(null);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleToogleOpen = useCallback(() => {\r\n    setOpen(!open);\r\n  }, [open, setOpen]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {open ? (\r\n        <span\r\n          onClick={handleToogleOpen}\r\n          className=\"fixed z-10 bg-black/20 inset-0\"\r\n        ></span>\r\n      ) : null}\r\n      <div>\r\n        {open ? (\r\n          <div\r\n            ref={dropDownRef}\r\n            style={{\r\n              top: (buttonRef.current?.getBoundingClientRect()?.top ?? 0) + 50,\r\n            }}\r\n            className=\"min-w-56 fixed z-20 bg-neutral-200 min-h-5 rounded-lg border border-neutral-400 shadow p-1 flex flex-col gap-y-1\"\r\n          >\r\n            {children}\r\n          </div>\r\n        ) : null}\r\n        <div ref={buttonRef} role=\"button\" onClick={handleToogleOpen}>\r\n          {button ?? <Button>{title}</Button>}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport {Dropdown};\r\n",
      "filename": "Dropdown"
    }
  ],
  "$schema": "https://ui.shadcn.com/schema/registry-item.json"
}
