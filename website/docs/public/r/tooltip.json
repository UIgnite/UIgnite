{"name":"tooltip","type":"registry:ui","dependencies":[],"files":[{"path":"packages/uignite/src/components/Tooltip/Tooltip.tsx","type":"registry:ui","content":"import React, {useState} from 'react';\r\nimport {cn} from '@/lib/utils.js';\r\n\r\nexport interface TooltipParams {\r\n  title: string;\r\n  options?: {\r\n    delay?: number;\r\n    containerClassName?: string;\r\n    tooltipStyle?: React.CSSProperties;\r\n  };\r\n}\r\n\r\nexport const Tooltip = ({\r\n  children,\r\n  title = '',\r\n  options = {\r\n    delay: 300,\r\n    containerClassName: '',\r\n    tooltipStyle: {},\r\n  },\r\n}: React.PropsWithChildren<TooltipParams>) => {\r\n  const [visible, setVisible] = useState(false);\r\n  let timeout: ReturnType<typeof setTimeout>;\r\n\r\n  const showTooltip = () => {\r\n    timeout = setTimeout(() => {\r\n      setVisible(true);\r\n    }, options.delay);\r\n  };\r\n  const hideTooltip = () => {\r\n    timeout = setTimeout(() => {\r\n      clearTimeout(timeout);\r\n      setVisible(false);\r\n    }, options.delay);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={cn('relative inline-block mt-10', options?.containerClassName)}\r\n    >\r\n      {visible && (\r\n        <div\r\n          style={options?.tooltipStyle}\r\n          className={cn(\r\n            'absolute bottom-full truncate left-1/2 -translate-x-1/2 text-sm text-center w-28 h-8 font-heading font-medium  px-4 py-1 rounded-md  text-black bg-white shadow-lg transition-opacity duration-300 opacity-100',\r\n            options.containerClassName\r\n          )}\r\n        >\r\n          {title}\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        onMouseEnter={showTooltip}\r\n        onMouseLeave={hideTooltip}\r\n        aria-label={title}\r\n        className=\"px-2 py-1 rounded-sm\"\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"}],"$schema":"https://ui.shadcn.com/schema/registry-item.json"}