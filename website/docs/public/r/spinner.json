{
  "name": "spinner",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "https://d278-104-28-199-190.ngrok-free.app/r/spinner.json"
  ],
  "files": [
    {
      "path": "registry/default/ui/Spinner.tsx",
      "type": "registry:ui",
      "content": "import {cn} from '@/lib/utils';\nimport {useEffect, useState, FC} from 'react';\n\ntype SpinnerProps = {\n  className?: string;\n  variant?:\n    | 'bounce'\n    | 'circular'\n    | 'bars'\n    | 'grid'\n    | 'ripple'\n    | 'terminal'\n    | 'loader';\n  text?: string;\n};\n\nconst Spinner: FC<SpinnerProps> = ({\n  className = '',\n  variant = 'bounce',\n  text = 'Loading...',\n}) => {\n  // dots\n  if (variant === 'bounce') {\n    return (\n      <div\n        className={cn('flex space-x-2 justify-center items-center', className)}\n      >\n        <div className=\"h-3 w-3 dark:bg-light-primary bg-dark-primary rounded-full animate-bounce [animation-delay:-0.3s]\" />\n        <div className=\"h-3 w-3 dark:bg-light-primary bg-dark-primary rounded-full animate-bounce [animation-delay:-0.15s]\" />\n        <div className=\"h-3 w-3 dark:bg-light-primary bg-dark-primary rounded-full animate-bounce\" />\n      </div>\n    );\n  }\n\n  // circular\n  if (variant === 'circular') {\n    return (\n      <div className={cn('flex justify-center items-center', className)}>\n        <div className=\"loader-circle\" />\n      </div>\n    );\n  }\n\n  // bars\n  if (variant === 'bars') {\n    return (\n      <div\n        className={cn(\n          'flex space-x-1 justify-center items-center h-10',\n          className\n        )}\n      >\n        {[0, 0.2, 0.4, 0.6, 0.8].map((delay, idx) => (\n          <div\n            key={idx}\n            className=\"w-2 h-5 bg-dark-primary dark:bg-light-primary rounded animate-grow-shrink\"\n            style={{animationDelay: `${delay}s`}}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  // ripple\n  if (variant === 'ripple') {\n    return (\n      <div\n        className={cn('relative flex justify-center items-center', className)}\n      >\n        <div className=\"absolute h-16 w-16 rounded-full border-4 border-dark-primary dark:border-light-primary animate-ping opacity-20\" />\n        <div className=\"absolute h-12 w-12 rounded-full border-4 border-dark-primary dark:border-light-primary animate-ping opacity-40 [animation-delay:0.3s]\" />\n        <div className=\"h-8 w-8 rounded-full border-4 border-dark-primary dark:border-light-primary\" />\n      </div>\n    );\n  }\n\n  // terminal\n  if (variant === 'terminal') {\n    const [displayText, setDisplayText] = useState('');\n    const [showCursor, setShowCursor] = useState(true);\n    const [textIndex, setTextIndex] = useState(0);\n\n    useEffect(() => {\n      if (textIndex < text.length) {\n        const timer = setTimeout(() => {\n          setDisplayText((prev) => prev + text[textIndex]);\n          setTextIndex((prev) => prev + 1);\n        }, 150);\n        return () => clearTimeout(timer);\n      } else {\n        const resetTimer = setTimeout(() => {\n          setDisplayText('');\n          setTextIndex(0);\n        }, 1000);\n        return () => clearTimeout(resetTimer);\n      }\n    }, [textIndex, text]);\n\n    useEffect(() => {\n      const blinkTimer = setInterval(() => {\n        setShowCursor((prev) => !prev);\n      }, 500);\n      return () => clearInterval(blinkTimer);\n    }, []);\n\n    return (\n      <div\n        className={cn(\n          'flex items-center justify-start bg-gray-900 text-green-500 p-4 font-mono rounded-md w-[270px]',\n          className\n        )}\n      >\n        <div className=\"flex flex-col w-full\">\n          <div className=\"flex mb-2 items-center\">\n            <span className=\"text-sm mr-auto text-gray-400\">Status</span>\n            <div className=\"ml-2 h-3 w-3 rounded-full bg-red-500\" />\n            <div className=\"ml-2 h-3 w-3 rounded-full bg-yellow-500\" />\n            <div className=\"ml-2 h-3 w-3 rounded-full bg-green-500\" />\n          </div>\n          <div className=\"h-22 w-full bg-black/50 p-2 rounded-md overflow-hidden text-sm flex items-center\">\n            {displayText}\n            {showCursor && (\n              <span className=\"inline-block w-[1px] h-5 bg-green-500 ml-1\" />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // loader\n  if (variant === 'loader') {\n    return (\n      <div className={cn('flex items-center justify-center', className)}>\n        <div className=\"relative w-10 h-10\">\n          {Array.from({length: 12}).map((_, i) => (\n            <div\n              key={i}\n              className=\"absolute top-0 left-1/2 w-[2px] h-3 bg-dark-primary dark:bg-light-primary origin-center loader-line\"\n              style={{\n                transform: `rotate(${i * 30}deg) translateY(-20px)`,\n                opacity: (i + 1) / 12,\n                animation: 'fade 1.2s linear infinite',\n                animationDelay: `${(i * 0.1).toFixed(1)}s`,\n              }}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  // fallback (dots)\n  return (\n    <div\n      className={cn('flex space-x-2 justify-center items-center', className)}\n    >\n      <div className=\"h-3 w-3 dark:bg-light-primary bg-dark-primary rounded-full animate-bounce [animation-delay:-0.3s]\" />\n      <div className=\"h-3 w-3 dark:bg-light-primary bg-dark-primary rounded-full animate-bounce [animation-delay:-0.15s]\" />\n      <div className=\"h-3 w-3 dark:bg-light-primary bg-dark-primary rounded-full animate-bounce\" />\n    </div>\n  );\n};\n\nexport {Spinner};\n",
      "filename": "Spinner"
    }
  ],
  "$schema": "https://ui.shadcn.com/schema/registry-item.json"
}
