{
  "name": "tabs",
  "type": "registry:ui",
  "dependencies": [],
  "files": [
    {
      "path": "packages/uignite/src/components/Tabs/Tabs.tsx",
      "type": "registry:ui",
      "content": "import React from 'react';\r\nimport {useState} from 'react';\r\nimport {cn} from '@/lib/utils';\r\nimport {ReactElement} from 'react';\r\n\r\ninterface TabContentParams {\r\n  value: string;\r\n  activeTab?: string;\r\n  content: any;\r\n}\r\ninterface TabParams {\r\n  title: string;\r\n  value: string;\r\n  activeTab?: string;\r\n  setActiveTab?: any;\r\n  className?: string;\r\n}\r\ninterface TabListParams {\r\n  children: ReactElement<TabParams> | ReactElement<TabParams>[];\r\n  activeTab?: any;\r\n  setActiveTab?: (value: string) => void;\r\n  className?: string;\r\n}\r\ninterface TabsParams {\r\n  children: ReactElement<TabListParams> | ReactElement<TabListParams>[];\r\n  defaultVal?: string;\r\n  className?: string;\r\n}\r\n\r\nconst Tabs = ({children, defaultVal = '', className = ''}: TabsParams) => {\r\n  const [activeTab, setActiveTab] = useState<string>(defaultVal);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`  w-[90%] dark:text-white  text-black  ring-[0.5px] ring-neutral-200  dark:ring-neutral-700 rounded-md ${className}`}\r\n      >\r\n        {React.Children.map(children, (child) => {\r\n          return React.cloneElement(child, {\r\n            activeTab,\r\n            setActiveTab,\r\n          });\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TabList = ({\r\n  children,\r\n  activeTab,\r\n  setActiveTab,\r\n  className = '',\r\n}: TabListParams) => {\r\n  return (\r\n    <div className={cn(`flex space-x-2   rounded-md`, className)}>\r\n      {React.Children.map(children, (child) =>\r\n        React.cloneElement(child, {activeTab, setActiveTab})\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tab = ({\r\n  title = 'Here is the Title',\r\n  value,\r\n  activeTab = '',\r\n  setActiveTab,\r\n  className = '',\r\n}: TabParams) => {\r\n  const isActive = activeTab === value;\r\n  return (\r\n    <button\r\n      onClick={() => setActiveTab(value)}\r\n      className={cn(\r\n        ` px-6 py-2 rounded-md text-md font-medium cursor-pointer\r\n        ${isActive ? ' dark:text-white dark:bg-neutral-900 text-black bg-neutral-200 ' : ' text-gray-500 hover:text-black dark:text-gray-600 dark:hover:text-white'}\r\n      `,\r\n        className\r\n      )}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst TabContent = ({value, activeTab, content}: TabContentParams) => {\r\n  if (activeTab === value)\r\n    return (\r\n      <div className=\" dark:text-white  text-black   rounded-md flex overflow-x-auto scrollable-content  mt-3\">\r\n        {content}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport {Tabs, Tab, TabList, TabContent};\r\n"
    }
  ],
  "$schema": "https://ui.shadcn.com/schema/registry-item.json"
}
