{
  "name": "tabs",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [
    "https://d278-104-28-199-190.ngrok-free.app/r/tabs.json"
  ],
  "files": [
    {
      "path": "components/ui/Tabs.tsx",
      "type": "registry:ui",
      "content": "import React from 'react';\nimport {useState} from 'react';\nimport {cn} from '@/lib/utils';\nimport {ReactElement} from 'react';\n\ninterface TabContentParams {\n  value: string;\n  activeTab?: string;\n  content: any;\n}\ninterface TabParams {\n  title: string;\n  value: string;\n  activeTab?: string;\n  setActiveTab?: any;\n  className?: string;\n}\ninterface TabListParams {\n  children: ReactElement<TabParams> | ReactElement<TabParams>[];\n  activeTab?: any;\n  setActiveTab?: (value: string) => void;\n  className?: string;\n}\ninterface TabsParams {\n  children: ReactElement<TabListParams> | ReactElement<TabListParams>[];\n  defaultVal?: string;\n  className?: string;\n}\n\nconst Tabs = ({children, defaultVal = '', className = ''}: TabsParams) => {\n  const [activeTab, setActiveTab] = useState<string>(defaultVal);\n\n  return (\n    <>\n      <div\n        className={`  w-[90%] dark:text-white  text-black  ring-[0.5px] ring-neutral-200  dark:ring-neutral-700 rounded-md ${className}`}\n      >\n        {React.Children.map(children, (child) => {\n          return React.cloneElement(child, {\n            activeTab,\n            setActiveTab,\n          });\n        })}\n      </div>\n    </>\n  );\n};\n\nconst TabList = ({\n  children,\n  activeTab,\n  setActiveTab,\n  className = '',\n}: TabListParams) => {\n  return (\n    <div className={cn(`flex space-x-2   rounded-md`, className)}>\n      {React.Children.map(children, (child) =>\n        React.cloneElement(child, {activeTab, setActiveTab})\n      )}\n    </div>\n  );\n};\n\nconst Tab = ({\n  title = 'Here is the Title',\n  value,\n  activeTab = '',\n  setActiveTab,\n  className = '',\n}: TabParams) => {\n  const isActive = activeTab === value;\n  return (\n    <button\n      onClick={() => setActiveTab(value)}\n      className={cn(\n        ` px-6 py-2 rounded-md text-md font-medium cursor-pointer\n        ${isActive ? ' dark:text-white dark:bg-neutral-900 text-black bg-neutral-200 ' : ' text-gray-500 hover:text-black dark:text-gray-600 dark:hover:text-white'}\n      `,\n        className\n      )}\n    >\n      {title}\n    </button>\n  );\n};\n\nconst TabContent = ({value, activeTab, content}: TabContentParams) => {\n  if (activeTab === value)\n    return (\n      <div className=\" dark:text-white  text-black   rounded-md flex overflow-x-auto scrollable-content  mt-3\">\n        {content}\n      </div>\n    );\n};\n\nexport {Tabs, Tab, TabList, TabContent};\n",
      "filename": "Tabs"
    }
  ],
  "$schema": "https://ui.shadcn.com/schema/registry-item.json"
}
